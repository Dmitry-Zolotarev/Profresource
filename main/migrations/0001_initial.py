# Generated by Django 5.2.3 on 2025-06-28 11:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Курсы',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Организации',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Полное_название', models.CharField(max_length=255)),
                ('Сокращенное_название', models.CharField(blank=True, max_length=100, null=True)),
                ('ИНН', models.CharField(blank=True, max_length=12, null=True)),
                ('ОГРН', models.CharField(blank=True, max_length=13, null=True)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Пол',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Почтовые_индексы',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Индекс', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Регионы',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Код', models.CharField(max_length=10)),
                ('Название', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Страны',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100)),
                ('Краткое_название', models.CharField(max_length=50)),
                ('Телефонный_код', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Типы_курсов',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Типы_материалов',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Типы_населенных_пунктов',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Типы_улиц',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Группы',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=255)),
                ('Дата_начала_курса', models.DateField(blank=True, null=True)),
                ('Дата_окончания_курса', models.DateField(blank=True, null=True)),
                ('Курс', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.курсы')),
            ],
        ),
        migrations.CreateModel(
            name='Районы',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100)),
                ('Регион', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.регионы')),
            ],
        ),
        migrations.CreateModel(
            name='Слушатели',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Фамилия', models.CharField(max_length=100)),
                ('Имя', models.CharField(max_length=100)),
                ('Отчество', models.CharField(blank=True, max_length=100, null=True)),
                ('Дата_рождения', models.DateField()),
                ('Серия_паспорта', models.CharField(blank=True, max_length=10, null=True)),
                ('Номер_паспорта', models.CharField(blank=True, max_length=10, null=True)),
                ('Номер_СНИЛС', models.CharField(blank=True, max_length=11, null=True)),
                ('ИНН', models.CharField(blank=True, max_length=12, null=True)),
                ('Телефон', models.CharField(blank=True, max_length=15, null=True)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('Пол', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.пол')),
                ('Гражданство', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.страны')),
            ],
        ),
        migrations.AddField(
            model_name='регионы',
            name='Страна',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.страны'),
        ),
        migrations.AddField(
            model_name='курсы',
            name='Тип',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.типы_курсов'),
        ),
        migrations.CreateModel(
            name='Материалы_курсов',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Файл_материала', models.BinaryField(blank=True, null=True)),
                ('Курс', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.курсы')),
                ('Тип', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.типы_материалов')),
            ],
        ),
        migrations.CreateModel(
            name='Населенные_пункты',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100)),
                ('тип', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.типы_населенных_пунктов')),
            ],
        ),
        migrations.CreateModel(
            name='Улицы',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=100)),
                ('Почтовый_индекс', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.почтовые_индексы')),
                ('тип', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.типы_улиц')),
            ],
        ),
        migrations.CreateModel(
            name='Дома',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Название', models.CharField(max_length=20)),
                ('id_улицы', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.улицы')),
            ],
        ),
        migrations.CreateModel(
            name='Адреса',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_дома', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.дома')),
                ('id_населенного_пункта', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.населенные_пункты')),
                ('id_района', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.районы')),
                ('id_региона', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.регионы')),
                ('id_студента', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.слушатели')),
                ('id_улицы', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.улицы')),
            ],
        ),
        migrations.CreateModel(
            name='Человек_группа',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Группа', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.группы')),
                ('Слушатель', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.слушатели')),
            ],
        ),
        migrations.CreateModel(
            name='Человек_организация',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Организация', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.организации')),
                ('Слушатель', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.слушатели')),
            ],
        ),
    ]
